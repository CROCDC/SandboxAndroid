apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'com.google.gms.google-services'

apply plugin: 'com.apollographql.android'

android {

    testOptions {
        unitTests.returnDefaultValues = true
    }

    androidExtensions {
        experimental = true
    }
    dataBinding.enabled = true

    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        applicationId "com.cr.o.cdc.sandboxAndroid"

        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildTypes {
        debug {
            testCoverageEnabled true
            buildConfigField("String", "URL_GRAPHQL_POKEMON", "\"https://graphql-pokemon.now.sh/graphql\"")
            buildConfigField("String", "URL_BITBUCKET", "\"https://bitbucket.org/site/\"")

        }
        release {
            buildConfigField("String", "URL_GRAPHQL_POKEMON", "\"https://bitbucket.org/site/\"")
        }

    }

}
apollo {
    generateKotlinModels.set(true)
}

configurations.all {
    resolutionStrategy.force "junit:junit:$junit"
}

dependencies {
    implementation project(':networking')

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    androidTestImplementation project(':sharedtest')
    testImplementation project(':sharedtest')

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "androidx.appcompat:appcompat:$app_compat"
    implementation "androidx.core:core-ktx:$androix_core"
    implementation "androidx.constraintlayout:constraintlayout:$constraint_layout"
    implementation "com.google.android.material:material:$material"

    implementation "androidx.recyclerview:recyclerview:$recyclerview"
    implementation "androidx.fragment:fragment-ktx:$fragment"

    androidTestImplementation "androidx.test:runner:$androidx_test"
    androidTestImplementation "androidx.test:rules:$androidx_test"
    androidTestImplementation "androidx.test:core:$androidx_test"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso"
    implementation "androidx.test.espresso:espresso-accessibility:$espresso"
    implementation "androidx.test.espresso:espresso-intents:$espresso"
    androidTestImplementation "io.mockk:mockk-android:$mockk"
    debugImplementation "androidx.fragment:fragment-testing:$fragment"

    testImplementation "androidx.test:runner:$androidx_test"
    testImplementation "androidx.test:rules:$androidx_test"
    testImplementation "androidx.test:core:$androidx_test"

    testImplementation "android.arch.core:core-testing:$arch_core_testing"
    androidTestImplementation "android.arch.core:core-testing:$arch_core_testing"

    testImplementation "junit:junit:$junit"
    testImplementation "io.mockk:mockk:$mockk"

    implementation "com.apollographql.apollo:apollo-runtime:$apollo"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation "com.google.firebase:firebase-messaging:$firebase"

    implementation "android.arch.lifecycle:extensions:$lifecycle_extensions"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle"

    implementation "com.pubnub:pubnub-gson:$pubnub"

    implementation "com.google.dagger:dagger-android:$dagger"
    implementation "com.google.dagger:dagger-android-support:$dagger"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger"
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger"
    kapt "com.google.dagger:dagger-android-processor:$dagger"
    kapt "com.google.dagger:dagger-compiler:$dagger"

    implementation "androidx.navigation:navigation-fragment-ktx:$navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation"

    implementation "androidx.room:room-runtime:$room"
    implementation "androidx.room:room-testing:$room"
    kapt "androidx.room:room-compiler:$room"
    kaptAndroidTest "androidx.room:room-compiler:$room"

    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit"

    implementation "androidx.paging:paging-runtime-ktx:$pagination"

    implementation "com.google.maps.android:android-maps-utils:$maps"

    implementation "com.google.android.gms:play-services-maps:$maps_utils"

    implementation "com.jakewharton.threetenabp:threetenabp:$threetenabp"

    implementation "com.apollographql.apollo:apollo-runtime:$apollo_runtime"
    implementation "com.apollographql.apollo:apollo-android-support:$apollo_support"

    implementation "com.squareup.picasso:picasso:$picasso"
    implementation "androidx.work:work-runtime-ktx:$work"

    implementation "androidx.test.uiautomator:uiautomator:$uiautomator"

}
